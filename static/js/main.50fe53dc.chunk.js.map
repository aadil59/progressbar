{"version":3,"sources":["ProgressBar.js","App.js","index.js"],"names":["ProgressBar","useState","progress","setProgress","useEffect","setInterval","Math","floor","random","type","onClick","className","style","width","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAuDeA,EArDK,WAClB,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WACRC,aAAY,kBAAMF,EAAYG,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAAI,OACnE,IAiBH,OACE,qCACE,wBAAQC,KAAK,SAASC,QAVJ,WAMpB,OALIR,EAAW,EACbC,EAAYD,EAAW,IACdA,EAAW,GACpBC,EAAY,IAEP,GAIL,iBAGA,wBAAQM,KAAK,SAASC,QArBP,WAMjB,OALIR,EAAW,IACbC,EAAYD,EAAW,IACdA,EAAW,KACpBC,EAAY,MAEP,GAeL,iBAGA,sBAAKQ,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBACEA,UACE,QACCT,GAAY,GACT,MACAA,EAAW,IAAMA,GAAY,GAC7B,SACAA,EAAW,GACX,QACA,IAENU,MAAO,CAAEC,MAAM,GAAD,OAAKX,EAAL,UAGlB,sBAAKS,UAAU,QAAf,UACGT,EAAW,EAAI,EAAIA,EAAW,IAAM,IAAMA,EAD7C,cC5CO,SAASY,IACtB,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,MCDN,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,I","file":"static/js/main.50fe53dc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    setInterval(() => setProgress(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n  const AddHandler = () => {\n    if (progress < 100) {\n      setProgress(progress + 10);\n    } else if (progress > 100) {\n      setProgress(100);\n    }\n    return false;\n  };\n  const ReduceHandler = () => {\n    if (progress > 0) {\n      setProgress(progress - 10);\n    } else if (progress < 0) {\n      setProgress(0);\n    }\n    return false;\n  };\n  return (\n    <>\n      <button type=\"button\" onClick={ReduceHandler}>\n        -10\n      </button>\n      <button type=\"button\" onClick={AddHandler}>\n        +10\n      </button>\n      <div className=\"wrapper\">\n        <div className=\"progress-bar\">\n          <div\n            className={\n              \"bar \" +\n              (progress <= 33\n                ? \"red\"\n                : progress > 33 && progress <= 66\n                ? \"orange\"\n                : progress > 66\n                ? \"green\"\n                : \"\")\n            }\n            style={{ width: `${progress}%` }}\n          ></div>\n        </div>\n        <div className=\"value\">\n          {progress < 0 ? 0 : progress > 100 ? 100 : progress}%\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProgressBar;\n","import \"./styles.css\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ProgressBar />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}